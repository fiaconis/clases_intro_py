# -*- coding: utf-8 -*-
"""Garcia_Valeria_Entregable2.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oEAa698JsWT34c-B7CtQ5uhDI0kKHSmT
"""

def problema_1(lista): #lista de nueros enteros 
    #dada una lista NO VACIA con numeros aleatorios enteros positivos, reemplazar a los numeros impares
    #de la lista por su consecutivo siguiente y devolver la lista con numeros pares "listaPares"
    
    listaPares = []

    for numero in lista:
        if numero %2 != 0:
            numero = numero + 1 
        
        listaPares.append (numero)

    return(listaPares)

def problema_2(numeroSerie): #numero serie es una lista
    #una empresa de seguridad diseña sus claves a partir del numero de serie del producto, que 
    #es una lista con 10 numeros enteros entre 10 y 99, los numeros dentro de la lista
    #pueden cambiar pero la cantidad siempre es de 10 elementos len(numeroSerie) es 10
    #la clave generada siempre es de 8 digitos (xx,xx,xx,xx)
    #los dos primeros digitos es el promedio de toda la lista                       (xx......)
    #del promedio se debe tomar solo la parte entera, ya que son dos digitos
    #los dos digitos siguientes corresponden al mayor numero de la lista            (..xx....)
    #los dos que le siguen corresponden al menor de la lista                        (....xx..)
    #los ultimos dos digitos es el numero dentro de la lista mas cercana al promedio(......xx)
    clave = []
    distancia = []

    promedio = int(sum(numeroSerie) / len(numeroSerie))
    clave.append(promedio)

    mayor = max(numeroSerie)
    clave.append(mayor)

    menor = min(numeroSerie)
    clave.append(menor)

    
    numeroSerie.sort()
    
    numeroSerie.reverse()

    for i in numeroSerie: 
        distancia.append(abs(promedio - i))
    
    distanciamenor = min(distancia)
    indice = distancia.index(distanciamenor)
   
    clave.append(numeroSerie[indice])


    return(clave)

def problema_3(palabra):#es de tipo string
    #se espera recibir una palabra tipo string, lo que deben hacer es invertir la palabra
    #por ejemplo, si ingresa "hola", debo retornar "aloh"

    invertida = ""
    invertida = palabra[::-1]

    return(invertida) #el tipo de dato de esta variable tiene que ser STRING



def problema_5(clave): #clave es de tipo string
    #dada una clave alfa-numerica, de 10 caracteres, recorrer la clave y contar cuantos de esos 
    #caracteres son numeros, para ello investigar la funcion isNumeric
    #link de ayuda: https://www.w3schools.com/python/ref_string_isnumeric.asp

cantidad = 0
  for letra in clave:
      if letra.isnumeric():
        cantidad = cantidad + 1

    return(cantidad)

def problema_6(lista_libros, lista_autores, eleccion): #listas de string, eleccion es de tipo string
    #El programa recibe como parámetros una lista de libros y una lista de autores de esos 
    #mismos libros estando ordenados en correlación, es decir, en la posición 4 de lista_autores está 
    #el nombre y apellido del autor que creó el libro de la posición 4 de lista_libros. La función 
    #deberá recibir el nombre de un libro y retornar un autor. 
    #Ejemplo 
    #lista_libros = [De Profundis, Hamblet, Demian]
    #lista_autores = [Oscar Wilde, Williams Shakespeare, Herman Hesse]
    #Al ingresar Hamblet, la función debe retornar "Williams Shakespeare - Hamblet". 
    
    diccionario = {}
    autor_libro = ""
    
    i = 0
    
    while i < len(lista_libros):
      diccionario[lista_libros[i]] = lista_autores[i]
      i = i + 1
 
    autor_libro = diccionario.get(eleccion)

   
    return(autor_libro)

def problema_7(mes):
  #Meses que tienen 30 dias:
  # Noviembre, Abril, junio y septiembre
  if mes in [11,4,6,9] :
      return(30)
  elif mes == 2 :
      return(28)
  else :
      return(31)

def problema_8(texto): # string
    #El programa recibirá un texto (string) y deberá retornar un texto nuevo
    #(text_sin) donde se encontrará el texto sin las vocales. Considerar que el texto puede tener vocales con acento, o dieresis (ü)
   
    vocales= "a,e,i,o,u,A,E,I,O,U,Á,É,Í,Ó,Ú,á,é,í,ó,ú,ä,ë,ï,ö,ü,Ä,Ë,Ï,Ö,Ü"
    texto_sin = ""
    
    for letra in vocales:
      texto = texto.replace(letra,'')

    texto_sin = texto

    return(texto_sin)